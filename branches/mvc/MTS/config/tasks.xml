<?xml version="1.0" encoding="utf-8" ?>

<!DOCTYPE timeline SYSTEM "tasks.dtd">

<!--
  For each test there is a special channel defined: Is{test name}Enabled
-->

<timeline>
  <!-- allow to switch power supply on -->
  <set id="allowPower">
    <channel name="AllowPowerSupply" value="true"/>
  </set>
  <!-- wait for power supply to switched on -->
  <waitfor id="waitForPower">
    <behavior require ="allowPower"/>
    <channel name="IsPowerSupplyOff" value="false"/>
  </waitfor>
  <!-- open device if it is closed -->
  <if id="isUnlocking">
    <behavior require="waitForPower"/>
    <channel name="IsOldMirror" value="true"/>
    <channel name="IsOldLocked" value="true"/>
    <then>
      <set>
        <channel name="LockStrong" value="false"/>
        <channel name="LockWeak" value="false"/>
        <channel name="UnlockWeak" value="true"/>
        <channel name="UnlockStrong" value="true"/>
      </set>
    </then>
    <else>
      <if>
        <channel name="IsOldMirror" value="false"/>
        <channel name="IsLocked" value="true"/>
        <then>
          <set>
            <channel name="LockStrong" value="false"/>
            <channel name="LockWeak" value="false"/>
            <channel name="UnlockWeak" value="true"/>
            <channel name="UnlockStrong" value="true"/>
          </set>
        </then>
      </if>
    </else>
  </if>
  <!-- wait for start button to be pressed and released -->
  <waitfor id="startDown">
    <behavior require="isUnlocking"/>
    <channel name="IsStartPressed" value="true"/>
  </waitfor>
  <waitfor id="startUp">
    <behavior require="startDown"/>
    <channel name="IsStartPressed" value="false"/>
  </waitfor>
  <!-- switch off all lights (from previous sequence) -->
  <set>
    <behavior require="startDown"/>
    <channel name="GreenLightOn" value="false"/>
    <channel name="RedLightOn" value="false"/>
  </set>
  <!-- close device -->
  <set id="lockWeak">
    <behavior require="startUp"/>
    <channel name="LockStrong" value="false"/>
    <channel name="LockWeak" value="true"/>
    <channel name="UnlockWeak" value="false"/>
    <channel name="UnlockStrong" value="false"/>
  </set>
  <!-- wait for device to be closed -->
  <if id="isLocked">
    <behavior require="lockWeak"/>
    <channel name="IsOldMirror" value="true"/>
    <then>
      <waitfor>
        <channel name="IsOldLocked" value="true"/>
      </waitfor>
    </then>
    <else>
      <waitfor>
        <channel name="IsLocked" value="true"/>
      </waitfor>
    </else>
  </if>
  <!-- lock device strongly -->
  <set id="lockStrong">
    <behavior require="isLocked"/>
    <channel name="LockStrong" value="true"/>
  </set>

  <!-- check for mirror presence -->
  <if id="mirrorPresence">
    <behavior require="lockStrong"/>
    <channel name="IsOldMirror" value="true"/>
    <then>
      <check channel="IsOldPowerfoldUp" testparam="MirrorGlass"/>
    </then>
    <else>
      <check channel="IsPowerfoldUp" testparam="MirrorGlass"/>
    </else>
  </if>

  <test id="pulloff" testparam="Pulloff" testtype="PulloffTest">
    <behavior require="mirrorPresence"/>
  </test>
  
  <!-- rubber test -->
  <if id="rubber">
    <behavior require="lockStrong"/>
    <channel name="IsLeftMirror" value="true"/>
    <then>
      <check channel="IsLeftRubberPresent" testparam="Rubber"/>
    </then>
    <else>
      <check channel="IsRightRubberPresent" testparam="Rubber"/>
    </else>
  </if>

  <test id="powerfold" testparam="Powerfold" testtype="PowerfoldTest">
    <behavior require="mirrorPresence" />
  </test>
  <test id="direction" testparam="DirectionLight" testtype="DirectionLightTest">
    <behavior require="mirrorPresence"/>
  </test>
  <test id="heating" testparam="HeatingFoil" testtype="HeatingFoilTest">
    <behavior require="mirrorPresence"/>
  </test>
  
  <!-- move calibrators up -->
  <!-- Only start moving mirror if pull of test has been passed -->
  <!--<if id="moveCalibUp">
    <behavior require="pulloff lockStrong"/>
    <channel name="IsTravelEnabled" value="true"/>
    <then>-->
      <set id="moveCalibUp">
        <behavior require="pulloff lockStrong"/>
        <channel name="MoveDistanceSensorDown" value="false"/>
        <channel name="MoveDistanceSensorUp" value="true"/>
      </set>
    <!--</then>
  </if>-->
  <!-- wait for calibrators to be up -->
  <waitfor id="isCalibUp">
    <behavior require="moveCalibUp"/>
    <channel name="IsDistanceSensorUp" value="true"/>
  </waitfor>
  <!-- wait one second -->
  <wait id="waitSecond" time="00:00:01">
    <behavior require="isCalibUp"/>
  </wait>
  <!-- allow mirror to move -->
  <set id="allowMovement">
    <behavior require="waitSecond"/>
    <channel name="AllowMirrorMovement" value="true"/>
  </set>

  <!-- move mirror galls to all sides -->
  <test id="travelNorth" testparam="TravelNorth" testtype="TravelNorthTest">
    <behavior require="allowMovement"/>
  </test>
  <!-- if travelNorth is disable travelSouth still requires waitSecond to be finished and does not start before -->
  <test id ="travelSouth" testparam="TravelSouth" testtype="TravelSouthTest">
    <behavior require="allowMovement travelNorth"/>
  </test>
  <test id ="travelEast" testparam="TravelEast" testtype="TravelEastTest">
    <behavior require="allowMovement travelSouth"/>
  </test>
  <test id ="travelWest" testparam="TravelWest" testtype="TravelWestTest">
    <behavior require="allowMovement travelEast"/>
  </test>

  <!-- disallow mirror to move -->
  <set id="disallowMovement">
    <behavior require="allowMovement travelNorth travelSouth travelEast travelWest"/>
    <channel name="AllowMirrorMovement" value="false"/>
  </set>
  <!-- move calibrators down -->
  <set id="moveCalibDown">
    <behavior require="disallowMovement"/>
    <channel name="MoveDistanceSensorDown" value="true"/>
    <channel name="MoveDistanceSensorUp" value="false"/>
  </set>
  <!-- wait for calibrators to be down -->
  <waitfor id="isCalibDown">
    <behavior require="moveCalibDown"/>
    <channel name="IsDistanceSensorDown" value="true"/>
  </waitfor>

  <!-- open device --><!-- all tasks are required to be finished -->
  <if id="isLocking">
    <behavior require="isCalibDown powerfold direction heating rubber pulloff"/>
    <channel name="IsOldMirror" value="true"/>
    <channel name="IsOldLocked" value="true"/>
    <then>
      <set>
        <channel name="LockStrong" value="false"/>
        <channel name="LockWeak" value="false"/>
        <channel name="UnlockWeak" value="true"/>
        <channel name="UnlockStrong" value="true"/>
      </set>
    </then>
    <else>
      <if>
        <channel name="IsOldMirror" value="false"/>
        <channel name="IsLocked" value="true"/>
        <then>
          <set>
            <channel name="LockStrong" value="false"/>
            <channel name="LockWeak" value="false"/>
            <channel name="UnlockWeak" value="true"/>
            <channel name="UnlockStrong" value="true"/>
          </set>
        </then>
      </if>
    </else>
  </if>
  <!-- wait for device to be opened -->
  <if>
    <behavior require="isLocking"/>
    <channel name="IsOldMirror" value="true"/>
    <then>
      <waitfor>
        <channel name="IsOldLocked" value="true"/>
      </waitfor>
    </then>
    <else>
      <waitfor>
        <channel name="IsLocked" value="true"/>
      </waitfor>
    </else>
  </if>
</timeline>