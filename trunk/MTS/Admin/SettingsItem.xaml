<base:DocumentItem x:Class="MTS.Admin.SettingsItem"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:base="clr-namespace:MTS.Base;assembly=MTS.Base"
    xmlns:ctrl="clr-namespace:MTS.Admin.Controls"
    xmlns:prop="clr-namespace:MTS.Properties"
    xmlns:main="clr-namespace:MTS"
    Title="{Binding ItemTitle, RelativeSource={RelativeSource self}}" ItemId="Settings"
    x:Name="root"
    Initialized="settingsWindow_Initialized">
    <ScrollViewer VerticalScrollBarVisibility="Visible" HorizontalScrollBarVisibility="Auto">
        <ScrollViewer.Resources>
            <Style x:Key="sectionHeaderStyle">
                <Setter Property="Label.Background" Value="White"/>
            </Style>
            <Style x:Key="tableStyle" TargetType="Border">
                <Setter Property="BorderBrush" Value="White"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Margin" Value="5"/>
            </Style>
            <Style TargetType="{x:Type Button}">
                <Setter Property="MinWidth" Value="60"/>
                <Setter Property="MaxWidth" Value="80"/>
                <Setter Property="Margin" Value="3"/>
            </Style>
        </ScrollViewer.Resources>
        <StackPanel>
            <Expander Header="Hardware" IsExpanded="True">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition MinWidth="200"/>
                        <!-- This is for splitter -->
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition MinWidth="200"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <Border Grid.Column="0" Style="{StaticResource tableStyle}">
                        <StackPanel>
                            <StackPanel.Resources>
                                <Style TargetType="Label">
                                    <Setter Property="VerticalAlignment" Value="Center"/>
                                </Style>
                                <Style TargetType="{x:Type base:UpDownButton}">
                                    <Setter Property="Width" Value="70"/>
                                    <Setter Property="Decimals" Value="0"/>
                                    <Setter Property="MinValue" Value="0"/>
                                    <Setter Property="MaxValue" Value="300"/>
                                    <Setter Property="MaxWidth" Value="80"/>
                                    <Setter Property="Unit" Value="{x:Static base:Units.Milimeters}"/>
                                    <Setter Property="HorizontalAlignment" Value="Left"/>
                                    <!-- whenever any UpDownButton value change setting state come to unsaved -->
                                    <EventSetter Event="ValueChanged" Handler="upDownButton_ValueChanged"/>
                                </Style>
                                <Style TargetType="ComboBox">
                                    <Setter Property="MinWidth" Value="160"/>
                                    <EventSetter Event="SelectionChanged" Handler="comboBox_SelectionChanged"/>
                                </Style>
                                <Style TargetType="{x:Type TextBox}">
                                    <Setter Property="VerticalAlignment" Value="Center"/>
                                    <EventSetter Event="TextChanged" Handler="textBox_TextChanged"/>
                                </Style>
                                <Style TargetType="{x:Type ColumnDefinition}">
                                    <Setter Property="MinWidth" Value="80"/>
                                </Style>
                                <Style TargetType="{x:Type CheckBox}">
                                    <EventSetter Event="Checked" Handler="checkBox_Changed"/>
                                </Style>
                            </StackPanel.Resources>
                        
                            <Label Style="{StaticResource sectionHeaderStyle}">Hardware module</Label>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MinWidth="80" Width="auto"/>
                                    <ColumnDefinition Width="auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                </Grid.RowDefinitions>
                                <Label Grid.Row="0" Grid.Column="0">Protocol:</Label>
                                <ComboBox Grid.Row="0" Grid.Column="1" x:Name="protocols" 
                                      SelectionChanged="protocols_SelectionChanged"
                                      ItemsSource="{Binding ProtocolTypes, ElementName=root}">

                                </ComboBox>
                            </Grid>
                            <ctrl:EthercatSettings x:Name="ethercatSettings" Visibility="Collapsed" BrowseClick="ethercatSettings_BrowseClick"/>
                            <ctrl:ModbusSettings x:Name="modbusSettings" Visibility="Collapsed" BrowseClick="modbusSettings_BrowseClick"/>
                            <ctrl:ModbusSettings x:Name="dummySettings" Visibility="Collapsed" BrowseClick="dummySettings_BrowseClick"/>

                            <Label Style="{StaticResource sectionHeaderStyle}">Printer settings</Label>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                </Grid.RowDefinitions>
                                <Label Grid.Row="0" Grid.Column="0">Printer:</Label>
                                <ComboBox x:Name="printers" Grid.Row="0" Grid.Column="1"></ComboBox>

                                <Label Grid.Row="1" Grid.Column="0">Width:</Label>
                                <base:UpDownButton x:Name="paperWidth" Grid.Row="1" Grid.Column="1" MinValue="30"/>

                                <Label Grid.Row="2" Grid.Column="0">Height:</Label>
                                <base:UpDownButton x:Name="paperHeight" Grid.Row="2" Grid.Column="1" MinValue="30"/>
                                
                                <Label Grid.Row="3" Content="Print labels:"/>
                                <CheckBox Grid.Row="3" Grid.Column="1" VerticalAlignment="Center" x:Name="printLabels" Checked="checkBox_Changed" Unchecked="checkBox_Changed"/>
                            </Grid>
                        </StackPanel>
                    </Border>

                    <GridSplitter Grid.Column="1" Grid.Row="0" ResizeDirection="Columns" Width="5" HorizontalAlignment="Stretch" 
                                  VerticalAlignment="Stretch"/>

                    <Border Grid.Column="3" Style="{StaticResource tableStyle}">
                        <StackPanel>
                            <Label Style="{StaticResource sectionHeaderStyle}">Calibration</Label>
                            <Grid>
                                <Grid.Resources>
                                    <Style TargetType="base:UpDownButton">
                                        <Setter Property="VerticalAlignment" Value="Top"/>
                                        <Setter Property="Decimals" Value="0"/>
                                        <Setter Property="Unit" Value="{x:Static base:Units.Milimeters}"/>
                                        <EventSetter Event="ValueChanged" Handler="distance_ValueChanged"/>
                                    </Style>
                                </Grid.Resources>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="80"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                </Grid.RowDefinitions>
                                <Label Grid.Row="0" Grid.Column="0">|XY|:</Label>
                                <base:UpDownButton Grid.Row="0" Grid.Column="1" x:Name="xyDistance"/>

                                <Label Grid.Row="1" Grid.Column="0">|YZ|:</Label>
                                <base:UpDownButton Grid.Row="1" Grid.Column="1" x:Name="yzDistance"/>

                                <Label Grid.Row="2" Grid.Column="0">|XZ|:</Label>
                                <base:UpDownButton Grid.Row="2" Grid.Column="1" x:Name="xzDistance"/>

                                <Button x:Name="calibrate" Grid.Row="3" Grid.ColumnSpan="2"
                                Click="calibrate_Click">Calibrate</Button>

                                <Border Grid.RowSpan="3" Grid.Column="2" BorderBrush="White" BorderThickness="1" HorizontalAlignment="Left">
                                    <Canvas Width="150" Height="150" x:Name="calibratorsCanvas">
                                        <Canvas.Resources>
                                            <Style TargetType="Ellipse">
                                                <Setter Property="Width" Value="10"/>
                                                <Setter Property="Height" Value="10"/>
                                                <Setter Property="Fill" Value="Red"/>
                                            </Style>
                                        </Canvas.Resources>
                                        <Ellipse ToolTip="Calibretor X" x:Name="calibretorX"/>
                                        <Ellipse ToolTip="Calibretor Y" x:Name="calibretorY"/>
                                        <Ellipse ToolTip="Calibretor Z" x:Name="calibretorZ"/>
                                    </Canvas>
                                </Border>
                            </Grid>
                        </StackPanel>
                    </Border>                    
                </Grid>
            </Expander>
            
            <Expander Header="Operators" x:Name="operatorsExpander">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <!-- This is for splitter -->
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    
                    <StackPanel Grid.Column="0">
                        <Label Style="{StaticResource sectionHeaderStyle}">Actions:</Label>
                        <Button Content="Add" Click="addOperator_Click" x:Name="deleteOperatorButton"/>
                        <Button Content="Delete" Click="deleteOperator_Click"/>
                        <Button Content="Edit" Click="editOperator_Click" x:Name="editOperatorButton"/>
                    </StackPanel>                    
                    <GridSplitter Grid.Column="1" ResizeDirection="Columns" Width="5" HorizontalAlignment="Stretch" 
                                  VerticalAlignment="Stretch"/>
                    <DataGrid Grid.Column="2" x:Name="operatorsGrid" ItemsSource="{Binding}"
                              CanUserReorderColumns="True" CanUserSortColumns="True" CanUserAddRows="False" CanUserDeleteRows="False" IsReadOnly="True"
                              AutoGenerateColumns="False" HorizontalGridLinesBrush="DarkGray" VerticalGridLinesBrush="DarkGray"
                              SelectionMode="Single" SelectionUnit="FullRow" BorderThickness="0" MouseDoubleClick="operatorsGrid_MouseDoubleClick">
                        <DataGrid.Resources>
                            <ctrl:OperatorTypeConverter x:Key="operatorTypeConverter"/>
                        </DataGrid.Resources>
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Login" Binding="{Binding Login}"/>
                            <DataGridTextColumn Header="Name"  Binding="{Binding Name}"/>
                            <DataGridTextColumn Header="Surname" Binding="{Binding Surname}"/>
                            <DataGridTextColumn Header="Group" Binding="{Binding Type, Converter={StaticResource operatorTypeConverter}}"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </Expander>

            <Expander Header="Channels" DataContext="{Binding ChannelSettings, ElementName=root}">
                <DockPanel>
                    <ListBox DockPanel.Dock="Left" ItemsSource="{Binding}" DisplayMemberPath="Name" IsSynchronizedWithCurrentItem="True"
                             Name="channelsSettingListBox"/>
                    <Grid DockPanel.Dock="Top">
                        <Grid.Resources>
                            <Style TargetType="base:UpDownButton">
                                <Setter Property="MinValue" Value="0"/>
                                <Setter Property="MaxValue" Value="65000"/>
                            </Style>
                        </Grid.Resources>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="80"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Label Grid.Row="0" Grid.Column="0">Raw minimum:</Label>
                        <base:UpDownButton Grid.Row="0" Grid.Column="1" Value="{Binding RawLow, Mode=TwoWay}" MinValue="0" MaxValue="65536" Decimals="0"/>

                        <Label Grid.Row="1" Grid.Column="0">Raw maximum:</Label>
                        <base:UpDownButton Grid.Row="1" Grid.Column="1" Value="{Binding RawHigh, Mode=TwoWay}" MinValue="0" MaxValue="65536" Decimals="0"/>

                        <Label Grid.Row="2" Grid.Column="0">Real minimum:</Label>
                        <base:UpDownButton Grid.Row="2" Grid.Column="1" Value="{Binding RealLow, Mode=TwoWay}" MinValue="0" MaxValue="65536"/>

                        <Label Grid.Row="3" Grid.Column="0">Real maximum:</Label>
                        <base:UpDownButton Grid.Row="3" Grid.Column="1" Value="{Binding RealHigh, Mode=TwoWay}" MinValue="0" MaxValue="65536"/>
                    </Grid>
                    <Label DockPanel.Dock="Top" Content="{Binding Description}"/>                    
                </DockPanel>
            </Expander>

            <StackPanel Orientation="Horizontal" Margin="3" HorizontalAlignment="Right">
                <Button x:Name="close" Click="close_Click">Close</Button>
                <Button x:Name="apply" Click="apply_Click">Apply</Button>
            </StackPanel>
        </StackPanel>
    </ScrollViewer>
</base:DocumentItem>
