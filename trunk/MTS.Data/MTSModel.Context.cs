//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Entity;
using System.Data.Entity.Infrastructure;
using System.Data.Objects;

namespace MTS.Data
{
    public partial class MTSContext : DbContext
    {
        public MTSContext()
            : base("name=MTSContext")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Mirror> Mirrors { get; set; }
        public DbSet<Supplier> Suppliers { get; set; }
        public DbSet<Operator> Operators { get; set; }
        public DbSet<Param> Params { get; set; }
        public DbSet<ParamOutput> ParamOutputs { get; set; }
        public DbSet<Shift> Shifts { get; set; }
        public DbSet<Test> Tests { get; set; }
        public DbSet<TestOutput> TestOutputs { get; set; }
        public DbSet<TestParam> TestParams { get; set; }
        public DbSet<TestShift> TestShifts { get; set; }
        public DbSet<MirrorResult> MirrorResults { get; set; }
        public DbSet<OperatorResult> OperatorResults { get; set; }
        public DbSet<ShiftResult> ShiftResults { get; set; }
    
        public virtual ObjectResult<DbTestResult> GetTestResult(Nullable<int> shiftId)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DbTestResult).Assembly);
    
            var shiftIdParameter = shiftId.HasValue ?
                new ObjectParameter("shiftId", shiftId) :
                new ObjectParameter("shiftId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DbTestResult>("GetTestResult", shiftIdParameter);
        }
    
        public virtual ObjectResult<DbParamResult> GetParamResult(Nullable<int> testId)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(DbParamResult).Assembly);
    
            var testIdParameter = testId.HasValue ?
                new ObjectParameter("testId", testId) :
                new ObjectParameter("testId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DbParamResult>("GetParamResult", testIdParameter);
        }
    }
}
