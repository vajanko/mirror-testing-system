<base:DocumentItem x:Class="MTS.Data.DataWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ad="clr-namespace:AvalonDock;assembly=AvalonDock"
    xmlns:base="clr-namespace:MTS.Base;assembly=MTS.Base"
    xmlns:system="clr-namespace:System;assembly=mscorlib"
    xmlns:col="clr-namespace:System.Collections;assembly=mscorlib"
    xmlns:data="clr-namespace:MTS.Data;assembly=MTS.Data"
    xmlns:conv="clr-namespace:MTS.Controls"
    xmlns:dt="clr-namespace:MTS.Data"
    Title="{Binding ItemTitle, RelativeSource={RelativeSource self}}" ItemId="Data" x:Name="root" mc:Ignorable="d" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    Loaded="root_Loaded" IsActiveDocumentChanged="root_IsActiveDocumentChanged">
    <base:DocumentItem.Resources>
        <CollectionViewSource x:Key="shiftResultViewSource" d:DesignSource="{d:DesignInstance data:ShiftResult, CreateList=True}" />
    </base:DocumentItem.Resources>
    <Grid DataContext="{StaticResource shiftResultViewSource}" SizeChanged="mainGrid_SizeChanged" >
        <Grid.Resources>
            <Style TargetType="DataGrid">
                <Setter Property="CanUserAddRows" Value="False"/>
                <Setter Property="CanUserDeleteRows" Value="False"/>
                <Setter Property="SelectionMode" Value="Single"/>
                <Setter Property="SelectionUnit" Value="FullRow"/>
                <Setter Property="AutoGenerateColumns" Value="False"/>
                <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
                <Setter Property="EnableColumnVirtualization" Value="True"/>
                <Setter Property="HorizontalGridLinesBrush" Value="DarkGray"/>
                <Setter Property="VerticalGridLinesBrush" Value="DarkGray"/>
                <Setter Property="MaxHeight" Value="300"/>
                <Setter Property="VerticalAlignment" Value="Top"/>
                <Setter Property="HeadersVisibility" Value="Column"/>
                <Setter Property="AlternatingRowBackground" Value="LightGray"/>
                <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
            </Style>
            <Style TargetType="GridSplitter">
                <Setter Property="Background" Value="DarkGray"/>
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="VerticalAlignment" Value="Stretch"/>
            </Style>
        </Grid.Resources>
        <Grid.ColumnDefinitions>
            <ColumnDefinition MinWidth="50" Width="*"/>
            <!-- This is for splitter -->
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition MinWidth="50" Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <!-- This is for splitter -->
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <DataGrid Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="3" ItemsSource="{Binding}" Name="shiftResultDataGrid"
                      SelectionChanged="shiftResultDataGrid_SelectionChanged" LoadingRow="shiftResultDataGrid_LoadingRow" HeadersVisibility="All">
            <DataGrid.RowHeaderTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type DataGridRow}}, Path=Header}"/>
                </DataTemplate>
            </DataGrid.RowHeaderTemplate>
            <DataGrid.Columns>
                <DataGridTextColumn x:Name="startColumn" Header="Start" Binding="{Binding Start, StringFormat=hh:mm:ss}"/>
                <DataGridTextColumn x:Name="finishColumn" Header="Finish" Binding="{Binding Finish, StringFormat=hh:mm:ss}"/>
                <DataGridTextColumn x:Name="operatorColumn" Binding="{Binding Path=Operator}" Header="Operator"  />
                <DataGridTextColumn x:Name="mirrorColumn" Binding="{Binding Path=Mirror}" Header="Mirror Name" />
                <DataGridTextColumn x:Name="completedColumn" Binding="{Binding Path=Completed}" Header="Completed" Width="SizeToHeader" />
                <DataGridTextColumn x:Name="failedColumn" Binding="{Binding Path=Failed}" Header="Failed" Width="SizeToHeader" />
                <DataGridTextColumn x:Name="abortedColumn" Binding="{Binding Path=Aborted}" Header="Aborted" Width="SizeToHeader" />
            </DataGrid.Columns>
        </DataGrid>

        <GridSplitter Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="3" ResizeDirection="Rows"  Height="5" HorizontalAlignment="Stretch" />

        <DataGrid Grid.Column="0" Grid.Row="2" x:Name="testResultDataGrid" SelectionChanged="testResultDataGrid_SelectionChanged" Tag="hello">
            <DataGrid.RowStyleSelector>
                <dt:ResultStyleSelector>
                    <dt:ResultStyleSelector.FailedStyle>
                        <Style TargetType="DataGridRow">
                            <Setter Property="Background" Value="Pink"/>
                        </Style>
                    </dt:ResultStyleSelector.FailedStyle>
                    <dt:ResultStyleSelector.AbortedStyle>
                        <Style TargetType="DataGridRow">
                            <Setter Property="Background" Value="LightBlue"/>
                        </Style>
                    </dt:ResultStyleSelector.AbortedStyle>
                </dt:ResultStyleSelector>
            </DataGrid.RowStyleSelector>
            <DataGrid.Resources>
                <conv:TaskResultTypeConverter x:Key="resultConverter"/>
                <conv:TestIdToNameConverter x:Key="testNameConverter"/>
            </DataGrid.Resources>
            <DataGrid.GroupStyle>
                <GroupStyle>
                    <GroupStyle.ContainerStyle>
                        <Style TargetType="GroupItem">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="GroupItem">
                                        <StackPanel>
                                            <Border BorderBrush="DarkGray" BorderThickness="1">
                                                <StackPanel Orientation="Horizontal">
                                                    <StackPanel.Resources>
                                                        <Style TargetType="TextBlock">
                                                            <Setter Property="Margin" Value="3"/>
                                                        </Style>
                                                    </StackPanel.Resources>
                                                    <TextBlock Text="Sequence number: "/>
                                                    <TextBlock Text="{Binding Name}" />
                                                    <TextBlock Text="Tests executed: " Margin="10 3 3 3"/>
                                                    <TextBlock Text="{Binding ItemCount}"/>
                                                </StackPanel>
                                            </Border>
                                            <ItemsPresenter/>
                                        </StackPanel>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </GroupStyle.ContainerStyle>
                    <GroupStyle.Panel>
                        <ItemsPanelTemplate>
                            <DataGridRowsPresenter/>
                        </ItemsPanelTemplate>
                    </GroupStyle.Panel>
                </GroupStyle>
            </DataGrid.GroupStyle>
            <DataGrid.Columns>
                <DataGridTextColumn x:Name="testNameColumn" Header="Test" Binding="{Binding Name, Converter={StaticResource testNameConverter}}"/>
                <DataGridTextColumn x:Name="testDurationColumn" Header="Duration" Binding="{Binding Duration, StringFormat=\{0:mm\\:ss\\.fff\}}">
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="DataGridColumnHeader">
                            <Setter Property="ToolTip"  Value="Format: mm:ss.msms"/>
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                </DataGridTextColumn>
                <DataGridTextColumn x:Name="testResultColumn" Header="Result"
                     Binding="{Binding Result, Converter={StaticResource resultConverter}}"/>
            </DataGrid.Columns>
        </DataGrid>

        <GridSplitter Grid.Column="1" Grid.Row="2" ResizeDirection="Columns" Width="5" HorizontalAlignment="Stretch" />

        <DataGrid Grid.Column="2" Grid.Row="2" ItemsSource="{Binding}" x:Name="paramResultDataGrid">
            <DataGrid.Resources>
                <conv:ParamValueConverter x:Key="paramValueConverter"/>
                <conv:ParamIdToNameConverter x:Key="paramNameConverter"/>
            </DataGrid.Resources>
            <DataGrid.Columns>
                <DataGridTextColumn x:Name="paramName" Header="Parameter">
                    <DataGridTextColumn.Binding>
                        <MultiBinding Converter="{StaticResource paramNameConverter}">
                            <MultiBinding.Bindings>
                                <Binding Path="TestName"/>
                                <Binding Path="Name"/>
                            </MultiBinding.Bindings>
                        </MultiBinding>
                    </DataGridTextColumn.Binding>
                </DataGridTextColumn>
                <DataGridTextColumn x:Name="paramValue" Header="Value">
                    <DataGridTextColumn.Binding>
                        <MultiBinding Converter="{StaticResource paramValueConverter}">
                            <MultiBinding.Bindings>
                                <Binding Path="Value"/>
                                <Binding Path="ValueType"/>
                            </MultiBinding.Bindings>
                        </MultiBinding>
                    </DataGridTextColumn.Binding>
                </DataGridTextColumn>
                <DataGridTextColumn x:Name="outputValue" Header="Output">
                    <DataGridTextColumn.Binding>
                        <MultiBinding Converter="{StaticResource paramValueConverter}">
                            <MultiBinding.Bindings>
                                <Binding Path="OutputValue"/>
                                <Binding Path="ValueType"/>
                            </MultiBinding.Bindings>
                        </MultiBinding>
                    </DataGridTextColumn.Binding>
                </DataGridTextColumn>
                <DataGridTextColumn x:Name="unitColumn" Header="Unit" Binding="{Binding Unit}"/>
                
            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</base:DocumentItem>
