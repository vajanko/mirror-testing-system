<ad:DocumentContent x:Class="MTS.Tester.TestWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ad="clr-namespace:AvalonDock;assembly=AvalonDock"
    xmlns:base="clr-namespace:MTS.Base;assembly=MTS.Base"
    xmlns:ctrl="clr-namespace:MTS.Tester.Controls"
    xmlns:tester="clr-namespace:MTS.Tester"
    xmlns:system="clr-namespace:System;assembly=mscorlib"
    Title="Tester" x:Name="root" Width="800">
    <DockPanel>
        <Grid DockPanel.Dock="Top" Margin="3">
            <Grid.Resources>
                <base:BoolNegationConverter x:Key="boolNegation"/>
                <base:BoolBindingSelector x:Key="boolSelector"/>
                <base:StringFormatConverter x:Key="stringFormatConvertor"/>

                <Style TargetType="{x:Type Button}">
                    <Setter Property="MinWidth" Value="70"/>
                    <Setter Property="HorizontalAlignment" Value="Left"/>
                    <Setter Property="Margin" Value="3"/>
                </Style>
            </Grid.Resources>
            
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="auto" MinWidth="150"/>
                <ColumnDefinition Width="Auto" MaxWidth="160"/>
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <Button Content="Load file..." Grid.Column="0" Grid.Row="0" Click="loadParameters"
                    IsEnabled="{Binding IsRunning, ElementName=root, Converter={StaticResource boolNegation}}"/>
            <Label Grid.Column="1" Grid.Row="0" x:Name="paramFile"/>

            <Label Content="Mirrors:" Grid.Row="1" Grid.Column="0" IsEnabled="{Binding IsNotRunning, ElementName=root}"/>
            <base:UpDownButton Grid.Column="1" Grid.Row="1" ToolTip="Number of mirrors to be tested"
                               Value="{Binding Total, ElementName=root, Mode=TwoWay}"
                               IsEnabled="{Binding IsNotRunning, ElementName=root}"
                               Decimals="0" MinWidth="60" MinValue="1" HorizontalAlignment="Left"/>

            <Button Content="Start Shift" Grid.Column="0" Grid.Row="2" Click="startClick"
                    IsEnabled="{Binding IsParamLoaded, ElementName=root}"/>
            <Button Content="Stop Shift" Grid.Column="0" Grid.Row="3" Click="stopClick"
                    IsEnabled="{Binding IsRunning, ElementName=root}"/>

            <!-- Shift properties -->
            <Label Content="Shift:" Grid.Column="2"/>
            <Label Grid.Column="3">
                <Label.Style>
                    <Style TargetType="{x:Type Label}">
                        <Setter Property="Content" Value="Not running"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsRunning, ElementName=root}" Value="True">
                                <Setter Property="Content">
                                    <Setter.Value>
                                        <MultiBinding Converter="{StaticResource stringFormatConvertor}" 
                                          ConverterParameter="Finished {0} of {1}">
                                            <MultiBinding.Bindings>
                                                <Binding Path="Finished" ElementName="root"/>
                                                <Binding Path="Total" ElementName="root"/>
                                            </MultiBinding.Bindings>
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Label.Style>
            </Label>

            <!-- These controls are enabled only if shift is running -->
            <Label Content="Passed:" Grid.Row="1" Grid.Column="2" IsEnabled="{Binding IsRunning, ElementName=root}"/>
            <Label Content="{Binding Passed, ElementName=root}" Grid.Row="1" Grid.Column="3"/>

            <Label Content="Failed:" Grid.Row="2" Grid.Column="2" IsEnabled="{Binding IsRunning, ElementName=root}"/>
            <Label Content="{Binding Failed, ElementName=root}" Grid.Row="2" Grid.Column="3"/>
        </Grid>        
        
        <ctrl:MirrorView DockPanel.Dock="Left" VerticalAlignment="Top"
                         Width="350" Height="350" BorderBrush="Black" BorderThickness="1"
                         x:Name="mirrorView"/>
        <WrapPanel DockPanel.Dock="Right" Orientation="Horizontal">
            <WrapPanel.Resources>
                <Style TargetType="{x:Type ctrl:FlowControl}">
                    <Setter Property="Background" Value="Black"/>
                    <Setter Property="MinWidth" Value="200"/>
                    <Setter Property="MinHeight" Value="120"/>
                    <Setter Property="TextBrush" Value="White"/>
                    <Setter Property="Margin" Value="4"/>
                    <Setter Property="BorderBrush" Value="Green"/>
                    <Setter Property="BorderThickness" Value="2"/>
                </Style>
            </WrapPanel.Resources>
            <ctrl:FlowControl Title="Spiral current" x:Name="spiralCurrent" Unit="mA"/>
            <ctrl:FlowControl Title="Blinker current" x:Name="blinkerCurrent" Unit="mA"/>
            <ctrl:FlowControl Title="ActuatorA current" Unit="mA" x:Name="actuatorACurrent"/>
            <ctrl:FlowControl Title="ActuatorB current" Unit="mA" x:Name="actuatorBCurrent"/>
            <ctrl:FlowControl Title="Powerfold current" Unit="mA" x:Name="powerfoldCurrent"/>
            <ctrl:FlowControl Title="Power supply 1" Unit="V" x:Name="powerSupplyVoltage1"/>
            <ctrl:FlowControl Title="Power supply 1" Unit="V" x:Name="powerSupplyVoltage2"/>
        </WrapPanel>
    </DockPanel>
</ad:DocumentContent>
